숙제 2. 프로그래밍 문제

1 ~ 100까지의 숫자를 모두 더해서 출력해보자!

class FifthHomework2 {
  public static void main(String[] args) {
    int i, sum = 0;
    
    for(i = 1; i <= 100; i++) {
      sum += i;
    }
    
    System.out.println("1 ~ 100까지의 합 = " + sum);
  }
}

숙제 3. 프로그래밍 문제

시작 값을 입력 받도록 하고
끝나는 값을 입력 받도록 만들어서 시작 ~ 끝까지의 합을 출력해보자!

import java.util.*;

class FifthHomework3 {
  public static void main(String[] args) {
    Scanner scan = new Scanner(System.in);
    
    System.out.print("시작값을 입력하세요: ");
    int start = scan.nextInt();
    
    System.out.print("끝값을 입력하세요: ");
    int end = scan.nextInt();
    
    int i, sum = 0;
    
    for(i = start; i <= end; i++) {
      sum += i;
    }
    
    System.out.printf("%d ~ %d까지의 합 = %d\n",
                        start, end, sum);
  }
}

숙제 4. 프로그래밍 문제

주사위 3 개를 굴려서 가장 큰 숫자가 나온 사람이 이기게 만들자!
사람은 총 3명(A, B, C)가 있다고 가정한다.

class FifthHomework3 {
  public static void main(String[] args) {
    int diceA = (int)(Math.random() * 6) + 1;
    int diceB = (int)(Math.random() * 6) + 1;
    int diceC = (int)(Math.random() * 6) + 1;
    
    System.out.printf("A = %d, B = %d, C = %d\n",
                        diceA, diceB, diceC);
    
    if(diceA > diceB) {
      if(diceA > diceC) {
        System.out.println("A 승리!");
      } else if(diceC > diceA) {
        System.out.println("C 승리!");
      } else {
        System.out.println("무승부");
      }
    } else if(diceB > diceA) {
      if(diceB > diceC) {
        System.out.println("B 승리!");
      } else if(diceC > diceB) {
        System.out.println("C 승리!");
      } else {
        System.out.println("무승부");
      }
    } else {  // A 와 B 가 같다
      if(diceA > diceC) {
        System.out.println("A - B 무승부");
      } else {
        System.out.println("C 승리!");
      }
    }
  }
}



* 16GB 정도의 USB가 하나 필요합니다.
  (포맷되니 데이터가 있다면 백업해두세요)

1. 구글에서 Ubuntu Download라고 입력해보자!
    그러면 Download Ubuntu Desktop 이라는 것이 보일 것이다.
    클릭해서 들어간다.

2. 사이트에 들어가면 20.04 가 보일텐데
   하위 호환성을 고려한다면 18.04 가 좀 더 좋다.
   단순한 애플리케이션 개발이라면 20.04 도 나쁘지 않지만
   우리는 18.04 를 활용하도록 한다.
   그러므로 Alternative downloads and torrents 를 클릭한다.

3. 이동한 창에서 내려보면
    Past releases and other flavours 에 있는
    Ubuntu 18.04 를 활용하도록 한다.

4. 클릭해서 들어가보면
    Desktop image 와 Server image 가 있는데
    데스크탑 이미지를 활용하도록 한다.
    64-bit PC (AMD64) desktop image 를 누른다.
    그러면 우분투 이미지를 다운로드 받게 된다.
    (시동 디스크 만들기 위한 준비 과정)

5. USB를 준비하도록 한다.

6. 구글에서 Universal USB Installer 를 검색하도록 한다.
    https://www.techspot.com/downloads/6153-universal-usb-installer.html
    Download 를 눌러서 UUI를 다운 받도록 한다.

7. 이 상태에서 USB를 컴퓨터에 꽂는다.
    그러면 컴퓨터가 디스크를 인식할 것이다.
    USB가 인식된 상태임을 확인해야 한다.

* 현재 USB 시동 디스크 만드는 작업이 듀얼 부팅에 해당합니다.
  듀얼 부팅:
  경우에 따라 윈도우도 사용할 수 있고
  또 어떤 경우에는 리눅스도 사용할 수 있게 만들어주는 것
  편하게 작업을 하려면 반드시 C 드라이브가 아닌
  D 드라이브나 외부 디스크가 필요하다.

* 중요 사항

만약 컴퓨터에 D 드라이브가 없으면
파티션 설정하는 창에서 D 드라이브를 만들어야 합니다.

- 윈도우 검색: 파티션 만들기 및 포맷 -> 디스크 관리가 나옴

- Byte -> KB -> MB -> GB 단위에 대해

2^10 byte = 1 KB
2^10 KB   = 1 MB
2^10 MB  = 1 GB
2^10 GB   = 1 TB

축소 전 전체 크기: 현재 할당되어 있는 크기를 의미함
사용할 수 있는 축소 공간 크기: 축소할 수 있는 최대 크기
축소할 공간 입력: 별도로 사용하고자 하는 디스크 크기를 적는다.
축소후 전체 크기: 현재 할당된 크기가 얼마로 줄어드는지 보여줌

내 컴퓨터에서 사용하려는 크기가 500 GB라 가정한다.
그렇다면 500 x 1024 를 계산해서
축소할 공간 입력에 적으면 된다.
(단, 사용할 수 있는 축소 공간 크기 보다 작아야 한다)

100 x 1024: 난 디스크가 모잘라서 100 GB만 할당하겠다면

Q: 현재 맥에서 나온 M1 의 경우 어떻게 리눅스를 활용해야할까요 ?
A: 우선 리누즈 토발즈가 발벗고 나섯기 때문에 해결은 됩니다.
    근대 아직은 커널 레벨에서 작업해야 하는 내용들이 많음
    결국 해결책은 Virtual Box, VMWare 혹은 Docker 를 사용하는 것이다.
    Virtual Box 나 VMWare 는 실제로 하드웨어를 가상화함
    (그래서 속도가 좀 더 떨어지게 됨)
    그러나 Docker는 운영체제 자체를 가상화 하지 않으므로
    다른 옵션들에 비해 좀 더 빠르게 활용이 가능하다.
    (사용법은 Docker 가 좀 더 어렵다)

* 현재 축속 된 상태로
  내컴퓨터에서 디스크가 여러개 분할된게 보이면 됩니다.
  안보이고 디스크 관리에서 보이면 일단 진행해봐도 괜찮을 것 같습니다.
  할당되지 않음 상태로 만들어주도록 하자!
  
* 사용하려는 파티션을 우클릭하여 볼륨 삭제를 해줘야 할당되지 않음 상태가 된다.

8. 앞서 다운 받은 UUI 를 클릭하고 Agree를 누른다.
    혹시 모르니 작업 표시줄에 추가해둔다.

9. Step 1: Select a Distriution from the dropdown to put on your USB
   위의 부분에서 Ubuntu 를 선택한다.
   (혹시 하는 차원에서 UUI 버전: 2.0.0.0)

10. Step 2: Browse to your ubutnu*desktop*.iso
     이 부분에서는 앞서 다운로드한 우분투 이미지를 선택하면 된다.

11. Step 3 는 USB 장치를 선택하란 의미
     꽂아놓은 USB 를 선택하면 된다.

12. 이후 옵션이 등장하는데 Fat32 Format Drive를 선택한다.

13. Create 를 누른다.

14. 경고 메시지(진짜로 이 작업을 할거냐 묻는다)가 등장
     Go!

15. USB 백업, 디스크 백업(D 드라이브)을 잘 했는지 확인한다.
     필요하다면 디스크를 한 번 삭제하고 포맷한다.
     나눠져 있지 않다면 파티션을 만들어주도록 한다.
     이미 나눠서 사용하는 사람들은 데이터 백업을 잊지 말자!
     데이터 백업을 하기가 애매한 상황이면 우선 보류한다.
     (외장하드나 등등 옮길것이 있어야 하기 때문)
     혹은 현재 사용하는 D 가 1 TB 있다 가정하고
     사용중인 공간이 700 GB 라 가저안다.
     그럼 300 GB 가 남으니 여기서 100 GB 를 떼서 사용한다.

16. 앞서 우리가 만든 시동 디스크에 내용이 잘 들어갔는지 확인한다.

17. 모든 것이 완료되었다.
     이제 컴퓨터의 BIOS 키를 찾아야 한다.
     (컴퓨터마다 다르고 초기 컴퓨터 부팅시에
      어떤 키를 누르라고 보일 수 있으며
      나오지 않는 경우엔 아래중 하나다.
      esc, f2, f8, f10, delete 보통 이중에 하나는 걸린다.
      (연타를 엄청 해야함)
      
18. 학원 컴퓨터(HP)라 가정하였을 때 Advanced -> Secure Boot Configuration 에 보면
    Legacy Disable & Secure Boot Enable <<<--- 활성화 여부 체크(기본 셋팅이긴함)
    그리고 UEFI Boot Order(순서)를 여러분들의 USB(시동 디스크)로 설정합니다.
    그리고 저장하고 나가기를 하면 리눅스 설치를 시작할 수 있습니다.
    
19. Install Ubuntu 라는 녀석을 키보드 화살표를 이용하여 선택한다.

20. 언어 설정(영어), 키보드 설정(변경 금지!), 소프트웨어 설치,
    사용자 계정 설정, 시간(utc) 설정 등등이 있는데
    소프트웨어 설치에서 third 파티 라이브러리를 반드시 설치해야 한다.
    (관련 사항이 나오면 모든 사항을 체크해서 전부 설치하도록 한다)
    계정 설정은 혼동을 방지하기 위해 bitweb 으로 깔맞춤하면 좋다.
    만약 이미 계정을 다르게 만들었다 한다면 구지 변경할 필요는 없다(조금 귀찮아질 뿐 ?)
    
* 주의 사항
  운영체제 설치 선택시 erase 선택 금지! (컴퓨터 날아갑니다)
  alongside 라고 나오는 부분을 선택해야하며
  이것이 나오지 않는 경우 파티션 분할 및 볼륨 삭제가 진행되지 않은것입니다.
  그렇다면 윈도우로 돌아가서 파티션 설정을 다시 해줘야 합니다.
  (미리 위쪽의 8번 사항에서 이것을 먼저 체크하는 것이 좋습니다)
    
21. Next -> Next 해서 설치하면 된다.

22. 재부팅 메시지가 나오면 재부팅하면 설치 완료!



* 기본 설정

Ctrl + Alt + T 를 누르면 터미널이 나타난다.
아래 명령을 입력하도록 한다.

- 자동으로 소프트웨어 업데이트 목록 갱신
sudo apt-get update

- 편집기 프로그램 설치
sudo apt-get install vim

- 깃 연동 프로그램 설치
sudo apt-get install git



* 한글 설정하기

1) 앱 화면에서 Language Support 클릭
2) 언어팩 전부 설치하기
3) 재부팅
4) Settings 에서 Korean(Hangul) 설정
5) 우측 상단에서 en -> 한글 설정



* jetbrains toolbox 설치하기

1) 사이트 들어가서 다운받기
   https://www.jetbrains.com/ko-kr/toolbox-app/
2) cd ~/Downloads
3) tar zxvf jetbrains-toolbox-1.19.7784.tar.gz
4) cd jetbrains-toolbox-1.19.7784/
5) ./jetbrains-toolbox



* 구글 리모트 설정하기(구글이 리눅스 진영이지만 아쉽게도 ? 리눅스는 꽤 빡셉니다)

1) 터미널 열기
2) sudo apt-get install xfce4

- xfce4는 원격 제어를 도와주는 소프트웨어 라이브러리

3) sudo apt-get install ca-certificates

- ca-certificates 는 인증 소프트웨어 라이브러리

4) sudo apt-get install libappindicator1

- libappindicator1 은 크롬 리모트를 제어하기 위한 서포트 라이브러리

5) mkdir sw
소프트웨어 관리용 디렉토리 생성

6) cd sw
관리용 디렉토리로 이동

7) wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
크롬 안정 버전을 설치하기 위한 작업

8) sudo dpkg -i google-chrome-stable_current_amd64.deb
실제 설치하는 과정

9) cd ~

10) vi .chrome-remote-desktop-session
    편집기로 파일을 연 상태에서 startxfce4 를 적고 저장하고 나간다.
    
* 주의 사항
  vi 명령어는 커맨드 모드, 입력 모드가 있는데
  입력 모드는 i 키, 혹은 a 키를 통해 사용할 수 있다.
  esc 키를 누르면 커맨드 모드가 된다.
  저장하고 나가기는 커맨드 모드에서 :wq 

11) https://remotedesktop.google.com/access/ 에 접속

12) 원격 액세스 설정에 있는 다운로드를 누르고 설치한다.

13) cd sw
14) mv ~/Downloads/chrome-remote-desktop_current_amd64.deb ./
15) sudo dpkg -i ~/sw/chrome-remote-desktop_current_amd64.deb
16) sudo apt-get install -f
17) sudo usermod -a -G chrome-remote-desktop bitweb
크롬 리모트 구동을 위한 프로그램 설치 및 권한 설정

* 주희 사항 - 17번의 bitweb은 학원 컴퓨터 계정이므로
            계정 이름이 학원 컴퓨터와 다르다면 본인이 만든 계정명을 입력해야 한다.

18) systemctl status chrome-remote-desktop
19) systemctl stop chrome-remote-desktop
20) systemctl start chrome-remote-desktop
21) sudo init 0
서비스 구동 여부를 확인하고 재부팅함

22) 재부팅 완료 이후 다시 아래 사이트에 접속한다.
    https://remotedesktop.google.com/access/ 에 접속
23) 원격 액세스 설정 -> 사용 -> 컴퓨터 이름 지정 -> 핀 번호 할당
24) 접속 테스트



* JetBrains Toolbox 가 잘못 설치되었을 때 지우는 방법

1) vi ~/.config/autostart/jetbrains-toolbox.desktop
   내용 확인후 essential 키워드가 없다면
   rm ~/.config/autostart/jetbrains-toolbox.desktop

2) vi ~/.local/share/JetBrains/Toolbox
   내용 확인후 essential 키워드가 없다면
   rm -rf ~/.local/share/JetBrains/Toolbox

3) vi ~/.local/share/applications/jetbrains-toolbox.desktop
   내용 확인후 essential 키워드가 없다면
   rm ~/.local/share/applications/jetbrains-toolbox.desktop

4) sudo reboot

5) 재부팅 이후에 아래 명령을 입력한다.
   sudo snap remove intellij-idea-community
   
6) 정상적으로 지운 이후 IntelliJ Community 버전 구동을 확인한다.



* OpenJDK(리눅스 진영에서 해킹한 자바) 설치

1) cd sw
2) sudo apt install curl
3) curl -O https://download.java.net/java/GA/jdk11/9/GPL/openjdk-11.0.2_linux-x64_bin.tar.gz
4) ls 를 통해 다운이 잘 되었는지 확인한다.
5) tar zxvf openjdk-11.0.2_linux-x64_bin.tar.gz
6) sudo mv jdk-11.0.2 /usr/local/
7) vi ~/.bashrc

편집기를 열고 맨 아래로 이동해서 아래를 작성한다.

export JAVA_HOME=/usr/local/jdk-11.0.2
export PATH=$PATH:$JAVA_HOME/bin/

* 주의 사항

위의 파일은 윈도우의 시스템 설정과 동일하므로
입력 모드 설정, 커맨드 모드 설정시 매우 주의해야 한다.
잘못될 경우 재설치를 해야할 수도 있으므로 신중하자!

8) 저장 이후에 새로운 터미널을 열고 기존의 터미널을 닫는다.

9) javac, java 



* 깃 명령어

- git clone 주소
  해당 주소의 내용을 복사해옴
- git status
  현재 변경 상태나 파일 추적 상태를 보여줌
- git commit -am "메시지"
  작업한 내용 및 변경 사항을 업데이트함
- git push origin main
  커밋이 완료되었으므로 실제 깃헙 웹사이트에 내용을 저장함



* 내일 진행할 내용

1) 숙제 리뷰
2) 어제 원격 셋팅 안된분들 마저 진행
3) git 과 IntelliJ 연동
4) 프로그래밍 진도: 배열
